** start of undefined **

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="styles.css">
    <title>Document</title>

</head>
<body> 
    <main class="container">

      <img class="freecodecamp-logo" src="https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg" alt="freeCodeCamp Logo">

      <h1 class="title">Is it a Palindrome?</h1>

      <div class="palindrome-div" data-dashlane-rid="57cbe2a00d8c626b" data-form-type="other">
            <label for="text-input">Enter in text to check for a palindrome:</label>
            
            <input class="palindrome-input" id="text-input" value="" type="text"  data-form-type="other">
            <button class="palindrome-btn" id="check-btn" data-form-type="other">Check</button>
            <div class="results-div hidden" id="result"></div>
      </div>

      <div class="palindrome-definition-div">
        <p class="palindrome-definition">
          <span role="img" aria-label="light-bulb">ðŸ’¡</span>
          A <dfn>palindrome</dfn> is a word or sentence that's spelled the same
          way both forward and backward, ignoring punctuation, case, and
          spacing.
        </p>
      </div>

    </main>
   
    <script src="script.js" type="text/javascript"></script>
  
</body>
</html>

** end of undefined **

** start of undefined **

body {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    background-color: #0a0a23;
    color: #ffffff;
}

p {
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    unicode-bidi: isolate;
}

.container {
    width: 100%;
    min-height: 100vh;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.freecodecamp-logo {
    height: 30px;
    margin-bottom: 20px;
}

.title {
    text-align: center;
    padding: 10px 0;
    font-size: 2.5rem;
    margin-bottom: 20px;
}

.palindrome-div {
    width: min(100vw, 450px);
    min-height: 100px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    padding: 20px;
    margin: 10px 0;
    background-color: white;
    box-shadow: 0 6px 6px #002ead;
}

label {
    color: #0a0a23;
    margin-bottom: 20px;
}

.palindrome-input {
    height: 30px;
    width: 250px;
    text-align: center;
    font-size: 1.2rem;
    margin: 10px;
    border: none;
    border-bottom: 2px solid #5a01a7;
}

.palindrome-btn {
    width: 90px;
    border: none;
    padding: 10px;
    border-radius: 15px;
    background-color: #5a01a7;
    color: #fff;
    cursor: pointer;
}

.results-div {
    overflow-y: auto;
    word-wrap: break-word;
    min-height: 50px;
    color: black;
}

.hidden {
    display: none;
}

.user-input {
    font-size: 1.4rem;
    margin-top: 10px;
    text-align: center;
}

.palindrome-definition-div {
    width: min(100vw, 450px);
    font-size: 1.3rem;
    min-height: 140px;
    background-color: #00471b;
    margin-top: 20px;
    padding: 20px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.palindrome-definition {
    vertical-align: middle;
    text-align: center;
}


** end of undefined **

** start of undefined **

const userInput = document.getElementById('text-input');
const checkPalindromeBtn = document.getElementById('check-btn');
const resultDiv = document.getElementById('result');

const checkForPalindrome = input => {
  const originalInput = input; // Store for later output

  if (input === '') {
    alert('Please input a value');
    return;
  }

  // Remove the previous result
  resultDiv.replaceChildren();

  const lowerCaseStr = input.replace(/[^A-Za-z0-9]/gi, '').toLowerCase();
  let resultMsg = `<strong>${originalInput}</strong> ${
    lowerCaseStr === [...lowerCaseStr].reverse().join('') ? 'is' : 'is not'
  } a palindrome.`;

  const pTag = document.createElement('p');
  pTag.className = 'user-input';
  pTag.innerHTML = resultMsg;
  resultDiv.appendChild(pTag);

  // Show the result.
  resultDiv.classList.remove('hidden');
};

checkPalindromeBtn.addEventListener('click', () => {
  checkForPalindrome(userInput.value);
  userInput.value = '';
});

userInput.addEventListener('keydown', e => {
  if (e.key === 'Enter') {
    checkForPalindrome(userInput.value);
    userInput.value = '';
  }
});

** end of undefined **

